/*
** Copyright (c) 2020, 2023, Oracle and/or its affiliates.
** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
*/

import { OcdResources } from "../../../OcdDesign"
import * as AutoGenerated from "./generated/AzureAzapiResource"

export interface AzureAzapiResource extends AutoGenerated.AzureAzapiResource {}

export namespace AzureAzapiResource {
    export namespace Identity {
        export interface Identity extends AutoGenerated.AzureAzapiResource.Identity.Identity {}
        export function newIdentity(): Identity {return AutoGenerated.AzureAzapiResource.Identity.newIdentity()}
        
    }
    export namespace Timeouts {
        export interface Timeouts extends AutoGenerated.AzureAzapiResource.Timeouts.Timeouts {}
        export function newTimeouts(): Timeouts {return AutoGenerated.AzureAzapiResource.Timeouts.newTimeouts()}
        
    }
    export function newResource(type?: string): AzureAzapiResource {
        const resource = {
            ...AutoGenerated.AzureAzapiResource.newResource('azapi_resource'),
        }
        return resource
    }
    export function cloneResource(resource: AzureAzapiResource, type?: string): AzureAzapiResource {
        return AutoGenerated.AzureAzapiResource.cloneResource(resource, 'azapi_resource') as AzureAzapiResource
    }
    export function allowedParentTypes(): string[] {
        return []
    }
    export function getParentId(resource: AzureAzapiResource): string {
        const parentId = resource.compartmentId
        return parentId
    }
    export function setParentId(resource: AzureAzapiResource, parentId: string): AzureAzapiResource {
        return resource
    }
    export function getConnectionIds(resource: AzureAzapiResource, allResources: OcdResources): string[] {
        // This List of Ids does not include the Parent Id or Compartment Id
        let associationIds: string[] = []
        return associationIds
    }
}

export class AzureAzapiResourceClient extends AutoGenerated.AzureAzapiResourceClient {
    static new(): AzureAzapiResource {
        return AzureAzapiResource.newResource()
    }
    static clone(resource: AzureAzapiResource): AzureAzapiResource {
        return AzureAzapiResource.cloneResource(resource)
    }
}

export default AzureAzapiResourceClient
